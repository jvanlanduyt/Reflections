What happens when you initialize a repository? Why do you need to do it?

It sets up the overhead to track any files you might want to track. It acknowleges you have files but doesn't track them.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

You work in the working directory and only submit the files to the staging area prior to commit. You know what files you have changed this way.

How can you use the staging area to make sure you have one commit per logical
change?

By using git diff, you can get the differences between what you have and what has been staged. You can then stage one change at a time.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

With careful commits, comments and branch management you could see each step in the evolution of your apps. 

How do the diagrams help you visualize the branch structure?

It shows how each path was constructed and its easier to see why some of the branches were made.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?